//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Sat Sep 29 21:56:20 2012 (1348926980)
// Driver 
//

.version 3.0
.target sm_12, texmode_independent
.address_size 32

.const .align 1 .b8 $str[31] = {99, 97, 110, 110, 111, 116, 32, 114, 101, 97, 100, 32, 95, 95, 119, 114, 105, 116, 101, 95, 111, 110, 108, 121, 32, 105, 109, 97, 103, 101, 0};
.const .align 1 .b8 $str1[31] = {99, 97, 110, 110, 111, 116, 32, 119, 114, 105, 116, 101, 32, 95, 95, 114, 101, 97, 100, 95, 111, 110, 108, 121, 32, 105, 109, 97, 103, 101, 0};
.visible .global .samplerref smp = { addr_mode_0 = clamp_to_border, addr_mode_1 = clamp_to_border, addr_mode_2 = clamp_to_border, filter_mode = nearest, force_unnormalized_coords = 1 };

.entry Bilinear(
	.param .texref Bilinear_param_0,
	.param .surfref Bilinear_param_1,
	.param .f32 Bilinear_param_2
)
{
	.reg .f32 	%f<36>;
	.reg .s16 	%rs<37>;
	.reg .pred 	%p<53>;
	.reg .s32 	%r<234>;
	.reg .s16 	%rc<37>;


	ld.param.f32 	%f9, [Bilinear_param_2];
	// inline asm
	mov.u32 	%r12, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r13, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r14, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r15, %tid.x;
	// inline asm
	add.s32 	%r37, %r15, %r12;
	mad.lo.s32 	%r1, %r14, %r13, %r37;
	// inline asm
	mov.u32 	%r16, %envreg4;
	// inline asm
	// inline asm
	mov.u32 	%r17, %ntid.y;
	// inline asm
	// inline asm
	mov.u32 	%r18, %ctaid.y;
	// inline asm
	// inline asm
	mov.u32 	%r19, %tid.y;
	// inline asm
	add.s32 	%r38, %r19, %r16;
	mad.lo.s32 	%r2, %r18, %r17, %r38;
	cvt.rn.f32.s32 	%f10, %r2;
	div.full.f32 	%f11, %f10, %f9;
	cvt.rn.f32.s32 	%f12, %r1;
	div.full.f32 	%f13, %f12, %f9;
	cvt.rzi.s32.f32 	%r39, %f11;
	cvt.rn.f32.s32 	%f6, %r39;
	sub.f32 	%f14, %f11, %f6;
	cvt.rzi.s32.f32 	%r40, %f13;
	cvt.rn.f32.s32 	%f3, %r40;
	sub.f32 	%f15, %f13, %f3;
	mov.u32 	%r41, 0;
	// inline asm
	tex.2d.v4.s32.f32 {%r20, %r21, %r22, %r23}, [Bilinear_param_0, smp, {%f3, %f6}];
	// inline asm
	add.f32 	%f16, %f11, 0f3F800000;
	mov.f32 	%f17, 0f3F800000;
	cvt.rzi.s32.f32 	%r42, %f16;
	cvt.rn.f32.s32 	%f8, %r42;
	// inline asm
	tex.2d.v4.s32.f32 {%r24, %r25, %r26, %r27}, [Bilinear_param_0, smp, {%f3, %f8}];
	// inline asm
	add.f32 	%f18, %f13, 0f3F800000;
	cvt.rzi.s32.f32 	%r43, %f18;
	cvt.rn.f32.s32 	%f7, %r43;
	// inline asm
	tex.2d.v4.s32.f32 {%r28, %r29, %r30, %r31}, [Bilinear_param_0, smp, {%f7, %f6}];
	// inline asm
	// inline asm
	tex.2d.v4.s32.f32 {%r32, %r33, %r34, %r35}, [Bilinear_param_0, smp, {%f7, %f8}];
	// inline asm
	sub.f32 	%f19, %f17, %f15;
	sub.f32 	%f20, %f17, %f14;
	mul.f32 	%f21, %f19, %f20;
	cvt.rn.f32.u32 	%f22, %r20;
	mul.f32 	%f23, %f21, %f22;
	mul.f32 	%f24, %f19, %f14;
	cvt.rn.f32.u32 	%f25, %r24;
	mul.f32 	%f26, %f24, %f25;
	add.f32 	%f27, %f23, %f26;
	mul.f32 	%f28, %f15, %f14;
	cvt.rn.f32.u32 	%f29, %r32;
	mul.f32 	%f30, %f28, %f29;
	add.f32 	%f31, %f27, %f30;
	mul.f32 	%f32, %f15, %f20;
	cvt.rn.f32.u32 	%f33, %r28;
	mul.f32 	%f34, %f32, %f33;
	add.f32 	%f35, %f31, %f34;
	cvt.rzi.u32.f32 	%r3, %f35;
	// inline asm
	suq.channel_order.b32 %r36, [Bilinear_param_1];
	// inline asm
	setp.gt.s32 	%p1, %r36, 4275;
	@%p1 bra 	BB0_4;

	add.s32 	%r46, %r36, -4272;
	setp.lt.u32 	%p5, %r46, 2;
	@%p5 bra 	BB0_9;

	add.s32 	%r47, %r36, -4274;
	setp.lt.u32 	%p6, %r47, 2;
	@%p6 bra 	BB0_3;
	bra.uni 	BB0_10;

BB0_3:
	mov.u32 	%r50, 2;
	mov.u32 	%r233, %r50;
	bra.uni 	BB0_11;

BB0_4:
	setp.eq.s32 	%p2, %r36, 4276;
	@%p2 bra 	BB0_8;

	add.s32 	%r44, %r36, -4280;
	setp.lt.u32 	%p3, %r44, 2;
	@%p3 bra 	BB0_9;

	add.s32 	%r45, %r36, -4277;
	setp.gt.u32 	%p4, %r45, 2;
	@%p4 bra 	BB0_10;

	mov.u32 	%r48, 4;
	mov.u32 	%r233, %r48;
	bra.uni 	BB0_11;

BB0_8:
	mov.u32 	%r49, 3;
	mov.u32 	%r233, %r49;
	bra.uni 	BB0_11;

BB0_9:
	mov.u32 	%r51, 1;
	mov.u32 	%r233, %r51;
	bra.uni 	BB0_11;

BB0_10:
	mov.u32 	%r233, %r41;

BB0_11:
	mov.u32 	%r231, %r233;
	mov.u32 	%r232, %r231;
	// inline asm
	suq.channel_data_type.b32 %r53, [Bilinear_param_1];
	// inline asm
	setp.gt.s32 	%p7, %r53, 4311;
	@%p7 bra 	BB0_22;

	setp.gt.s32 	%p12, %r53, 4306;
	@%p12 bra 	BB0_16;

	setp.eq.s32 	%p18, %r53, 4304;
	@%p18 bra 	BB0_30;

	setp.eq.s32 	%p19, %r53, 4305;
	@%p19 bra 	BB0_29;

	setp.eq.s32 	%p20, %r53, 4306;
	@%p20 bra 	BB0_30;
	bra.uni 	BB0_26;

BB0_16:
	setp.gt.s32 	%p13, %r53, 4309;
	@%p13 bra 	BB0_20;

	setp.eq.s32 	%p16, %r53, 4307;
	@%p16 bra 	BB0_29;

	add.s32 	%r63, %r53, -4308;
	setp.lt.u32 	%p17, %r63, 2;
	@%p17 bra 	BB0_19;
	bra.uni 	BB0_26;

BB0_19:
	setp.eq.s32 	%p22, %r232, 3;
	selp.b32 	%r232, 2, 0, %p22;
	bra.uni 	BB0_30;

BB0_20:
	setp.eq.s32 	%p14, %r53, 4310;
	@%p14 bra 	BB0_27;

	setp.eq.s32 	%p15, %r53, 4311;
	@%p15 bra 	BB0_30;
	bra.uni 	BB0_26;

BB0_22:
	add.s32 	%r56, %r53, -4312;
	setp.gt.u32 	%p8, %r56, 6;
	@%p8 bra 	BB0_26;

	mov.u32 	%r57, 1;
	shl.b32 	%r58, %r57, %r56;
	and.b32  	%r59, %r58, 41;
	setp.ne.s32 	%p9, %r59, 0;
	@%p9 bra 	BB0_29;

	and.b32  	%r62, %r58, 82;
	setp.ne.s32 	%p10, %r62, 0;
	@%p10 bra 	BB0_28;

	setp.eq.s32 	%p11, %r56, 2;
	@%p11 bra 	BB0_30;

BB0_26:
	mov.u32 	%r232, 0;
	bra.uni 	BB0_30;

BB0_27:
	setp.eq.s32 	%p21, %r232, 3;
	selp.b32 	%r232, 4, 0, %p21;
	bra.uni 	BB0_30;

BB0_28:
	shl.b32 	%r232, %r232, 2;
	bra.uni 	BB0_30;

BB0_29:
	shl.b32 	%r232, %r232, 1;

BB0_30:
	mul.lo.s32 	%r11, %r232, %r1;
	setp.gt.s32 	%p23, %r36, 4274;
	@%p23 bra 	BB0_38;

	setp.eq.s32 	%p29, %r36, 4272;
	@%p29 bra 	BB0_69;

	setp.eq.s32 	%p30, %r36, 4273;
	@%p30 bra 	BB0_63;

	setp.eq.s32 	%p31, %r36, 4274;
	@%p31 bra 	BB0_34;
	bra.uni 	BB0_75;

BB0_34:
	mov.u32 	%r152, 0;
	// inline asm
	suq.channel_data_type.b32 %r150, [Bilinear_param_1];
	// inline asm
	setp.eq.s32 	%p41, %r150, 4314;
	@%p41 bra 	BB0_62;

	setp.eq.s32 	%p42, %r150, 4315;
	@%p42 bra 	BB0_61;

	setp.ne.s32 	%p43, %r150, 4316;
	@%p43 bra 	BB0_81;

	// inline asm
	sust.b.2d.v2.b32.trap [Bilinear_param_1, {%r11, %r2}], {%r3, %r156};
	// inline asm
	ret;

BB0_38:
	setp.gt.s32 	%p24, %r36, 4278;
	@%p24 bra 	BB0_45;

	setp.eq.s32 	%p27, %r36, 4275;
	@%p27 bra 	BB0_55;

	setp.eq.s32 	%p28, %r36, 4278;
	@%p28 bra 	BB0_41;
	bra.uni 	BB0_75;

BB0_41:
	mov.u32 	%r101, 0;
	// inline asm
	suq.channel_data_type.b32 %r99, [Bilinear_param_1];
	// inline asm
	setp.eq.s32 	%p35, %r99, 4314;
	@%p35 bra 	BB0_54;

	setp.eq.s32 	%p36, %r99, 4315;
	@%p36 bra 	BB0_53;

	setp.ne.s32 	%p37, %r99, 4316;
	@%p37 bra 	BB0_81;

	// inline asm
	sust.b.2d.v4.b32.trap [Bilinear_param_1, {%r11, %r2}], {%r109, %r110, %r3, %r111};
	// inline asm
	ret;

BB0_45:
	add.s32 	%r65, %r36, -4280;
	setp.lt.u32 	%p25, %r65, 2;
	@%p25 bra 	BB0_69;

	setp.ne.s32 	%p26, %r36, 4279;
	@%p26 bra 	BB0_75;

	mov.u32 	%r68, 0;
	// inline asm
	suq.channel_data_type.b32 %r66, [Bilinear_param_1];
	// inline asm
	setp.eq.s32 	%p32, %r66, 4314;
	@%p32 bra 	BB0_52;

	setp.eq.s32 	%p33, %r66, 4315;
	@%p33 bra 	BB0_51;

	setp.ne.s32 	%p34, %r66, 4316;
	@%p34 bra 	BB0_81;

	// inline asm
	sust.b.2d.v4.b32.trap [Bilinear_param_1, {%r11, %r2}], {%r76, %r3, %r77, %r78};
	// inline asm
	ret;

BB0_51:
	// inline asm
	cvt.sat.u16.u32 	%rs1, %r85;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs2, %r3;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs3, %r86;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs4, %r87;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [Bilinear_param_1, {%r11, %r2}], {%rs1, %rs2, %rs3, %rs4};
	// inline asm
	ret;

BB0_52:
	// inline asm
	cvt.sat.u8.u32 	%rc1, %r95;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc2, %r3;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc3, %r96;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc4, %r97;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [Bilinear_param_1, {%r11, %r2}], {%rc1, %rc2, %rc3, %rc4};
	// inline asm
	ret;

BB0_53:
	// inline asm
	cvt.sat.u16.u32 	%rs9, %r118;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs10, %r119;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs11, %r3;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs12, %r120;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [Bilinear_param_1, {%r11, %r2}], {%rs9, %rs10, %rs11, %rs12};
	// inline asm
	ret;

BB0_54:
	// inline asm
	cvt.sat.u8.u32 	%rc9, %r128;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc10, %r129;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc11, %r3;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc12, %r130;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [Bilinear_param_1, {%r11, %r2}], {%rc9, %rc10, %rc11, %rc12};
	// inline asm
	ret;

BB0_55:
	mov.u32 	%r134, 0;
	// inline asm
	suq.channel_data_type.b32 %r132, [Bilinear_param_1];
	// inline asm
	setp.eq.s32 	%p38, %r132, 4314;
	@%p38 bra 	BB0_60;

	setp.eq.s32 	%p39, %r132, 4315;
	@%p39 bra 	BB0_59;

	setp.ne.s32 	%p40, %r132, 4316;
	@%p40 bra 	BB0_81;

	// inline asm
	sust.b.2d.v2.b32.trap [Bilinear_param_1, {%r11, %r2}], {%r3, %r138};
	// inline asm
	ret;

BB0_59:
	// inline asm
	cvt.sat.u16.u32 	%rs17, %r3;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs18, %r141;
	// inline asm
	// inline asm
	sust.b.2d.v2.b16.trap [Bilinear_param_1, {%r11, %r2}], {%rs17, %rs18};
	// inline asm
	ret;

BB0_60:
	// inline asm
	cvt.sat.u8.u32 	%rc17, %r3;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc18, %r146;
	// inline asm
	// inline asm
	sust.b.2d.v2.b8.trap [Bilinear_param_1, {%r11, %r2}], {%rc17, %rc18};
	// inline asm
	ret;

BB0_61:
	// inline asm
	cvt.sat.u16.u32 	%rs21, %r3;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs22, %r159;
	// inline asm
	// inline asm
	sust.b.2d.v2.b16.trap [Bilinear_param_1, {%r11, %r2}], {%rs21, %rs22};
	// inline asm
	ret;

BB0_62:
	// inline asm
	cvt.sat.u8.u32 	%rc21, %r3;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc22, %r164;
	// inline asm
	// inline asm
	sust.b.2d.v2.b8.trap [Bilinear_param_1, {%r11, %r2}], {%rc21, %rc22};
	// inline asm
	ret;

BB0_63:
	mov.u32 	%r170, 0;
	// inline asm
	suq.channel_data_type.b32 %r168, [Bilinear_param_1];
	// inline asm
	setp.eq.s32 	%p44, %r168, 4314;
	@%p44 bra 	BB0_68;

	setp.eq.s32 	%p45, %r168, 4315;
	@%p45 bra 	BB0_67;

	setp.ne.s32 	%p46, %r168, 4316;
	@%p46 bra 	BB0_81;

	// inline asm
	sust.b.2d.b32.trap [Bilinear_param_1, {%r11, %r2}], {%r173};
	// inline asm
	ret;

BB0_67:
	// inline asm
	cvt.sat.u16.u32 	%rs25, %r175;
	// inline asm
	// inline asm
	sust.b.2d.b16.trap [Bilinear_param_1, {%r11, %r2}], {%rs25};
	// inline asm
	ret;

BB0_68:
	// inline asm
	cvt.sat.u8.u32 	%rc25, %r179;
	// inline asm
	// inline asm
	sust.b.2d.b8.trap [Bilinear_param_1, {%r11, %r2}], {%rc25};
	// inline asm
	ret;

BB0_69:
	mov.u32 	%r185, 0;
	// inline asm
	suq.channel_data_type.b32 %r183, [Bilinear_param_1];
	// inline asm
	setp.eq.s32 	%p47, %r183, 4314;
	@%p47 bra 	BB0_74;

	setp.eq.s32 	%p48, %r183, 4315;
	@%p48 bra 	BB0_73;

	setp.ne.s32 	%p49, %r183, 4316;
	@%p49 bra 	BB0_81;

	// inline asm
	sust.b.2d.b32.trap [Bilinear_param_1, {%r11, %r2}], {%r3};
	// inline asm
	ret;

BB0_73:
	// inline asm
	cvt.sat.u16.u32 	%rs27, %r3;
	// inline asm
	// inline asm
	sust.b.2d.b16.trap [Bilinear_param_1, {%r11, %r2}], {%rs27};
	// inline asm
	ret;

BB0_74:
	// inline asm
	cvt.sat.u8.u32 	%rc27, %r3;
	// inline asm
	// inline asm
	sust.b.2d.b8.trap [Bilinear_param_1, {%r11, %r2}], {%rc27};
	// inline asm
	ret;

BB0_75:
	mov.u32 	%r200, 0;
	// inline asm
	suq.channel_data_type.b32 %r198, [Bilinear_param_1];
	// inline asm
	setp.eq.s32 	%p50, %r198, 4314;
	@%p50 bra 	BB0_80;

	setp.eq.s32 	%p51, %r198, 4315;
	@%p51 bra 	BB0_79;

	setp.ne.s32 	%p52, %r198, 4316;
	@%p52 bra 	BB0_81;

	// inline asm
	sust.b.2d.v4.b32.trap [Bilinear_param_1, {%r11, %r2}], {%r3, %r208, %r209, %r210};
	// inline asm
	ret;

BB0_79:
	// inline asm
	cvt.sat.u16.u32 	%rs29, %r3;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs30, %r217;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs31, %r218;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs32, %r219;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [Bilinear_param_1, {%r11, %r2}], {%rs29, %rs30, %rs31, %rs32};
	// inline asm
	ret;

BB0_80:
	// inline asm
	cvt.sat.u8.u32 	%rc29, %r3;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc30, %r227;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc31, %r228;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc32, %r229;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [Bilinear_param_1, {%r11, %r2}], {%rc29, %rc30, %rc31, %rc32};
	// inline asm

BB0_81:
	ret;
}


